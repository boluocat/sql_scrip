create   or   replace  directory DUMPDIR  as   'E:/git' ;    --指定一个路径，DUMPDIR为路径的别名
grant   read ,write  on  directory DUMPDIR  to  system;    --并以管理员身份赋予权限，‘system’，是创建这个路径的用户名
GRANT   EXECUTE   ON  utl_file  TO  system;  
/

declare
		type array_type IS varray(500) OF VARCHAR2(100);
		v_array array_type;
		
		/*统计输入数组元素个数*/
		v_count integer;  
		
		/*设置待获取的变量*/
		v_a varchar2(50); 
		v_b varchar2(50); 
		v_c varchar2(50); 
		v_sql varchar2(150); 
		
		/*创建游标，定义定义文件类型，定义待写入的colnum type*/
		querycursor SYS_REFCURSOR; 
		txt_handle UTL_FILE.file_type; 
		sfzh my_data.what_name%type; 

begin
    v_array := array_type('my_data;what_name;yours,yees');  /*输入原始数据，按照数组形式，每个元素内用分号;分隔*/
		v_count := v_array.count;
		for i in 1 .. v_count loop
						    v_a := regexp_substr(v_array(i),'[^;]+',1,1);
						    v_b := regexp_substr(v_array(i),'[^;]+',1,2);
						    v_c := regexp_substr(v_array(i),'[^;]+',1,3);
				v_sql :=  'select '||v_b||'  from '||v_a;
 				dbms_output.put_line('select '||v_b||'  from '||v_a|| ';');
 				/*写入文件*/
				txt_handle := UTL_FILE.FOPEN('DUMPDIR','lys.txt','w');   
				open querycursor for v_sql; 
				loop
				   fetch querycursor into sfzh;
					 exit when querycursor%notfound;
					 UTL_FILE.PUT_LINE(txt_handle,sfzh);
			    end loop;
		end loop;
		/*写入完成后，关闭游标和关闭文件*/
		close querycursor;
	     UTL_FILE.FCLOSE(txt_handle);
end;
/